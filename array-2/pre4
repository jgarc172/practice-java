public int[] pre4(int[] nums) {
  /*
    return a new array containing the elements from the original array that 
     come before the first 4 in the original array
  */
  
  int length = indexAt(nums, 4);
  if (length < 0){
    return new int[0];
  }
  int[] newArr = new int[length];
  for (int i=0; i <= newArr.length-1; i++){
    newArr[i] = nums[i];
  }
  return newArr;
}

public int indexAt(int[] nums, int element){
  int index = -1;
  for (int i=0; i <= nums.length-1; i++){
    if (nums[i] == element){
      index = i;
      break;
    }
  }
  return index;
}

/*
Solution from function definition:
  pre4 takes an int array and returns an int array
  
Given:
  a non-empty int array nums
  
Solution from description:
  return a new array 
  
Restrictions:
  1. new array contains the elements from the original array that 
    come before the first 4 in the original array
  2. the original array will contain at least one 4
  3. length of new array is unknown until the 4 is located

Intermediate translations:
  2. the first 4 will be located at some index i
  3. the length of the new array will be i
  1. copy the elements from the original array to the new array up to index i
    not inclusive
    
Solution:
  - define a function that locates the index of the first 4
  - use the function to get length and create new array
  - copy elements from original array from 0 to lengngth - 1
  

*/
