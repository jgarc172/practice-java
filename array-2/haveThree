public boolean haveThree(int[] nums) {
  /*
    return true if the value 3 appears in the array exactly 3 times, 
      and no 3's are next to each other
  */
  int count3 = 0;
  int lastIndex = nums.length - 2;
  for (int i=0; i <= lastIndex; i++){
    if (nums[i] == 3 && nums[i+1] != 3){
      count3++;
    }
    if (i == lastIndex){
        if (nums[i+1] == 3){
          count3++;
        }
    }
  }
  return count3 == 3;
}

/*
Solution from function name:
  haveThree is boolean
  
Given:
  an array of ints nums
  
Outputs:
  true: if the value 3 appears in the array exactly 3 times, 
    and no 3's are next to each other
  false; otherwise
  
Solution from description:
  return true if the value 3 appears in the array exactly 3 times, 
    and no 3's are next to each other
    
Restrictions:
  no 3s are next to each other
  
Intermediate translations:
  value 3 appears -> nums[i] == 3
  value appears 3 times -> increment a count when value 3 appears
  values next to each other -> values nums[i] and nums[i+1]
  no 3s are next to each other -> true when nums[i] is 3 and nums[i+1] is not 3
  
Solution:
  count3 is 0
  for each pair of elements in array from i=0 to last index (length - 2)
    increment count3 if nums[i] is 3 and nums[i+1] is not 3
    if last index, increment count3 if nums[i+1] is 3
  return true if count3 is 3
  
*/
