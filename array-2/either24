public boolean either24(int[] nums) {
  /*
    return true if the array contains a 2 next to a 2 or a 4 next to a 4
    but not both
  */
  
  boolean has22 = false;
  boolean has44 = false;
  for (int i=0; i <= nums.length - 2; i++){
    if (nums[i] == 2 && nums[i+1] == 2){
      has22 = true;
    }
    if (nums[i] == 4 && nums[i+1] == 4){
      has44 = true;
    }
  }
  
  return (has22 || has44) && !(has22 && has44);
}

/*
Improved description:
  Given an int array nums, return 
  - true if in all pairs of nums there is at least  one pair of 2s or 
    there is at least one pair of 4s.
  - false if no pairs of 2s in nums or no pairs of 4 in nums or both pairs are 
    in nums

Intermediate translations:
  - to test each pair in nums, the index i in nums starts at 0 and ends at
    nums.length-2
  - a pair of elements -> nums[i] and nums[i+1]
  - test when both elements are 2
  - test when both elements are 4
  - the first pair that meets the test passes
  
Solution:
  assume has22 is false and has44 is false
  for each pair in nums from index i=0 to nums.length-2
    if both pair elements are 2
      has22 is true
    if both pair elements are 4
      has44 is true
  return true if (has22 or has44) and not (has22 and has44)

*/
