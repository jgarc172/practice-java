public int[] make2(int[] a, int[] b) {
  /*
    transfer elements from a then from b to new array,length 2, until full
    return new array
  */
  
  int[] newArr = new int[2];
  /*
  int i identifies array a
  int j identifies array b
  int k identifies newArr. full when k > 1;
  */
  
  int k = 0;
  
  for (int i=0; k <= 1 && i <= a.length-1; i++){
    newArr[k] = a[i];
    k++;
  }

  for (int j=0; k <= 1 && j <= b.length-1; j++){
    newArr[k] = b[j];
    k++;
  }
  
  return newArr;
}

/*
Solution from description:
  return a new array length 2
  
Given and constraints:
  2 int arrays a and b
  a and b may be any length, including 0
  2 or more elements available between a and b
  new array will contain, as much as will fit, 
    the elements from a followed by the elements from b 
    
Intermediate translations:
  copy elements from a to new array
  if new array is not full, copy from b until full
  new array -> has indexes 0 and 1
  new array is full -> when values have been copied to its two positions
  fullness of new array -> an index that increments from 0 to 1
  
Multiple arrays:
  different arrays can be identified by the index used to traverse its elements
  use i to identify arrays a and b
  use j to identify new array and to test for fullness
  
*/
