Given an array of ints, return true if there is a 1 in the array with a 2 somewhere later in the array.

has12([1, 3, 2]) → true
has12([3, 1, 2]) → true
has12([3, 1, 4, 5, 2]) → true

public boolean has12(int[] nums) {
 /*
  return true if there is a 1 in the array with a 2 somewhere later in the array
 */
 
 for (int i=0; i <= nums.length - 1; i++){
   if (nums[i] == 1){
     for (int j=i+1; j <= nums.length - 1; j++){
       if (nums[j] == 2){
         return true;
       }
     }
   }
 }
 return false;
}

/*
Translated description:
  given an int array nums return a boolean
  true: when an element in the array is 1 and in the remaining part of the array
        there is a 2
  false: otherwise
      
Intermediate translations:
  - access all elements with index i=0 to length - 1
  - when the 1 element is found -> nums[i] == 1
  - access the remaining array in a nested for loop, starting at j=i+1
  - find a 2 element -> nums[j] == 2
  
Summary of arrays and subarrays (slices)
  physical array -> elements with indexes from 0 to  length - 1
  slice in array -> elements starting at index where value is 1, to length - 1
  
Solution:
  use two nested loops: 1 to iterate through the array; another for the slice
  for each element in array
    if element is 1
      for each remaining element in the array
        return true if an element is 2
  return false
  
*/
