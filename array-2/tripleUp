Return true if the array contains, somewhere, three increasing adjacent numbers like .... 4, 5, 6, ... or 23, 24, 25.

tripleUp([1, 4, 5, 6, 2]) → true
tripleUp([1, 2, 3]) → true
tripleUp([1, 2, 4]) → false

public boolean tripleUp(int[] nums) {
  
  /*
    return true if there are any three adjacent and increasing numbers in nums
  */
  
  int lastIndex = nums.length - 3;
  for (int i=0; i <= lastIndex; i++){
    if (nums[i+1] == nums[i]+1 && nums[i+2] == nums[i+1]+1){
      return true;
    }
  }
  return false;
}

/*
Translated description:
  tripleUp takes an int array nums and returns a boolean
  
  true:
    if there are any three adjacent numbers in nums in increasing numbers
  false:
    otherwise


Intermediate translations:
  - three adjacent numbers -> numbers in positions i, i+1, i+2
  - increasing numbers -> each next number is 1 more than the previous number
    nums[i+1] == nums[i] + 1 && nums[i+2] == nums[i+1] + 1
  - access all three adjacent elements using an index form 0 to nums.length-3
  
Solution:
  for each triple elements in nums from index 0 to nums.length-3
    if each next element is 1 more than the previous element
      return true
  otherwise return false

*/
