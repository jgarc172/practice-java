Return an array that is "left shifted" by one -- so {6, 2, 5, 3} returns {2, 5, 3, 6}. You may modify and return the given array, or return a new array.

shiftLeft([6, 2, 5, 3]) → [2, 5, 3, 6]
shiftLeft([1, 2]) → [2, 1]
shiftLeft([1]) → [1]

public int[] shiftLeft(int[] nums) {
  /*
    return a modified nums array with the numbers shifted to the left
  */

  if (nums.length < 2){
    return nums;
  }
  int temp = nums[0];
  for (int i=0; i<= nums.length-2; i++){
    nums[i] = nums[i + 1];
  }
  nums[nums.length - 1] = temp;
  return nums;
}

/*
Translated description:
  shiftLeft takes an int array nums and returns a new int array or modified nums
  array where each element's value is the value from the next element

Intermediate translation using a new int array newArr:
  1. newArr will be the same length as of num
  2. the default values in newArr will be 0
  3. the values from nums will be copied to newArr as follows:
     for an index i=0 to nums.length-2
       newArr[i] = nums[i+1]
  4. the last element in newArr will be the value of the first element of nums
  
Intermediate translation modifying nums:
  - if the length of nums < 2, return nums
  1. assign the first element to a temp variable
  2. for an index i=0 to nums.length-2
       nums[i] = nums[i+1]
  3. the last element is assigned the value in temp
  
*/

