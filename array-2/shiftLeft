public int[] shiftLeft(int[] nums) {
  // solution from description:
  // Return an array that is "left shifted" by one
  
  // improved description or translation to pseudocode or code:
  // based on the circular example, the last element is to the left of the first element
  // Given array of integers -> int[] nums
  // length of nums -> length = nums.length
  // index i from 0 to lenght - 1
  // left shift -> value from right element is assigned to left element
  // one way -> nums[i] = nums[i+1]
  // second way -> nums[i-1] = nums[i]
  // special case pair: nums[length - 1] and nums[0]
  // left shift is nums[length-1] = nums[0]
  
  // special iteration of the index and the pairs involved:
  // example, length is 4, index i is from 0 to 3
  // pairs for left shifting: 0 and 1, 1 and 2, 2 and 3, 3 and 0 (not 4)
  // the last special pair should be done outside of the loop
  // also the value at index 0 should be temporarily saved
  
  // solution:
  // if array is empty, return the array without shifting
  // save the firs element
  // iterate through all the pairs, except the special pair last,first
  // shift the special pair
  // return the modified array
  
  int length = nums.length;
  if (length == 0){
    return nums;
  }
  int i = 0;
  int temp = nums[0];
  while (i < length - 1){
    nums[i] = nums[i + 1];
    i++;
  }
  nums[length - 1] = temp;
  return nums;
}
