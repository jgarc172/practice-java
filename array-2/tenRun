public int[] tenRun(int[] nums) {
  /*
    return a modified nums that replaces values to the last multiple of 10 found
      nums[i] = lastMult
  */
  
  boolean follows = false;
  int lastMult = 0;

  for (int i=0; i <= nums.length-1; i++){
    if (nums[i] % 10 == 0){
      lastMult = nums[i];
      follows = true;
    } else if (follows){
      nums[i] = lastMult;
    }
  }
  return nums;
}

/*
Translated descripton:
  tenRun takes an int array and modifies its element values to the last multiple
  of 10
    nums[i] = lastMult
  
Intermediate translation:
  1. identify the next element that is an multiple of 10 and remember its value
      true when nums[i] % 10 == 0
      lastMult = nums[i]
  2. identify the following elements as as being in the "follows" subarray/slice
     of nums
      follows = true
  1. if the element follows a multiple of ten that value is replaced with that 
     of the multiple value
      nums[i] = lastMult
  3. otherwise, ignore the element as it is not a multiple and it is located
     before the first multiple of ten is found

  - the array is partitioned in several sub-arrays or slices delimited by
    the location of the different multiples of 10.  One way to distinguis these
    slices is to identifying them as "follows" a multiple or "not follows"
    
nums [ ][ ][30][ ][ ][ ][10 ][ ][ ][ ][ ]
    !follows    follows     follows
    
Solution with restrictions:
  initialize a boolean flag follows to false
  declare a variable lastMult to remember the last variable
  for each element in nums array
    if the element is a multiple of 10
      replace lastMult value with the element's value
      follows is true
    else the element is not multiple of 10
      if follows is true
        replace the element's value with lastMult
      else ignore
  return changed nums array
      
*/
