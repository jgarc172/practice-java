Given a string, return a new string where the first and last chars have been exchanged.

frontBack("code") → "eodc"
frontBack("a") → "a"
frontBack("ab") → "ba"

public String frontBack(String str) {
  /*
    returns a new string formed from str as
      last character + middle substring + first character
  */
  
  int length = str.length();
  if (length < 2) {
    return str;
  }
  char first = str.charAt(0);
  char last = str.charAt(length - 1);
  String middle = str.substring(1, length - 1);
  return last + middle + first;
  
}

/*
Translated description:
  frontBack takes a string str and returns a new string formed from str but
  the first and last characters have been exchanged
  
Intermediate translations:
  - a string like str is made up of multiple substrings and characters
  - str -> firstChar + middleSubstring + lastChar
  - new string -> lastChar + middleSubstring + firstChar
  - first character -> str.charAt(0)
  - last character -> str.charAt(str.length()
  - middle substring -> str.substring(1, str.length() - 1)
  
Solution:
  if str is less than two characters long
    return str
  return a new string formed from
    last character + middle substring + first character
*/

