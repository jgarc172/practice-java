Given 2 int values, return true if one is negative and one is positive. Except if the parameter "negative" is true, 
then return true only if both are negative.

posNeg(1, -1, false) → true
posNeg(-1, 1, false) → true
posNeg(-4, -5, true) → true

public boolean posNeg(int a, int b, boolean negative) {
  /*
    returns true
    when negative is true and both a and b are negative, or
    when negative is false and one of them is negative and the other is positive
  */
  
  if (negative){
    return (a < 0 && b < 0);
  } else {
    return (a < 0 && b > 0) || (a > 0 && b < 0);
  }
  
}

/*
Translated description:
  posNeg takes two integers, a and b, a boolean negative, and returns true
  when negative is true and both a and b are negative, or
  when negative is false and one of them is negative and the other is positive
  
Intermediate translations:
  value a is negative -> true when a < 0
  value b is positive -> true when a > 0
  
Solution:
  if negative is true
    return true when a < 0 and b < 0
  else negative is false
    return true when a < 0 && b >0 or a > 0 && b < 0
 
*/

