We have a number of bunnies and each bunny has two big floppy ears. We want to compute the total number of ears 
across all the bunnies recursively (without loops or multiplication).

bunnyEars(0) → 0
bunnyEars(1) → 2
bunnyEars(2) → 4

public int bunnyEars(int bunnies) {
  /*
    returns the number of ears for all the bunnies by adding the two ears of
    each bunny
  */
  if (bunnies == 0){
    return 0;
  }
  return 2 + bunnyEars(bunnies-1);
}

/*
Translated description:
  bunnyEars takes an int bunnies and returns an int as the total number of bunny 
  ears, by reapeatedly adding two ears to the total and replacing n with the
  next smaller number n-1

Intermediate translations:
  - when there are no bunnies, the total is 0
  - each bunny adds 2 to the total
  
Translated recursive definition of bunnyEars(bunnies):
    total is 0 when bunnies is 0
    else total is 2 + bunnyEars(bunnies-1)
    return total
  
Solution:
  return 0 if bunnies is 0
  else return 2 + bunnyEars(bunnies-1)
  
Translated iterative definition of bunnyEars(bunnies):
  total is 0
  for each decreasing value of bunnies, from bunnies to 0, repeat the following:
    add 2 to the total
  return total

  
*/
